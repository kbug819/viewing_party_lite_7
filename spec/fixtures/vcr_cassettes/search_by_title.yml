---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<THEMOVIEDB_API_KEY>&query=Fight%20Club
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 12 Oct 2023 21:34:14 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=25914
      X-Memc:
      - HIT
      X-Memc-Key:
      - 0cd14138ae78d0d35a8fdad6755d5f96
      X-Memc-Age:
      - '14006'
      X-Memc-Expires:
      - '12459'
      Etag:
      - W/"d85a369e4998421b01d3e64070832ae5"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 cc6ceb31b4cbecfe6f32c9ec7a5f2bf8.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW57-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - JCEDF8EeamCG4gcHtbqEy6Q8bSSlaRYDnaMx0zEMDgKm7Ic9q-kvBw==
      Age:
      - '3335'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 12 Oct 2023 22:29:49 GMT
recorded_with: VCR 6.2.0
